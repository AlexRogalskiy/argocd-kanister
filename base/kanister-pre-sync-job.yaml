apiVersion: batch/v1
kind: Job
metadata:
  generateName: kanister-pre-sync-
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "1"
spec:
  template:
    metadata:
      creationTimestamp: null
    spec:
      serviceAccountName: myrelease-kanister-operator
      containers:
       - image: ghcr.io/kanisterio/kanister-kubectl:1.18
         command:
           - sh
           - -o
           - errexit
           - -o
           - pipefail
           - -c
           - |
             # create an actionset on the project 
             backup_name="mysqlapp-backup-$(date| tr ' ' '-'|tr ':' '-'|tr '[:upper:]' '[:lower:]')"
             cat <<EOF | kubectl create -f -
             apiVersion: cr.kanister.io/v1alpha1
             kind: ActionSet
             metadata:  
               name: $backup_name
               namespace: $NAMESPACE   
             spec:
               actions:
               - blueprint: mysql-blueprint
                 name: backup
                 object: 
                   kind: statefulset
                   name: mysql
                   namespace: mysql
                 profile: 
                   name: s3-profile-4zsr9
                   namespace: mysql
                 secrets:
                   mysql:
                     name: mysql
                     namespace: mysql
             EOF
            
             # Wait until the backup action is complete 
             count=30
             delay=3
             total_time=$((count*delay))
             while true 
             do
               state=$(kubectl get actionset -n kanister $backup_name -o jsonpath='{.status.state}')
               if [ "$state" =  "Complete" ]
               then 
                 echo "actionset $backup_name is Complete"                
                 break
               else 
                 echo "actionset $backup_name is ${state}"
                 count=$((count-1))
                 sleep $delay
               fi
               if [ $count = 0 ] 
               then 
                 echo "fail to get actionset $backup_name Complete after ${total_time} seconds"
                 exit 1 
               fi
             done 
         env:          
         - name: NAMESPACE
           valueFrom:
             fieldRef:
               fieldPath: metadata.namespace            
         name: backupper
      restartPolicy: Never
